[
    {
        "name": "快速生成网络mp4视频缩略图技术",
        "date": "2020年9月13日",
        "abstract": "背景 由于网络原因，在下载视频之前我们往往会希望能够先生成一些视频的缩略图，大致浏览视频内容，再确定是否应花时间下载。如何能够快速得到视频多个帧的缩略图的同时尽量少的下载视频的内容，是一个值得研究的问题。 思路 众所周知，不考虑音频、字幕的话，视频是由多个图像帧拼接而成的，因此我们的目标也就是尽量只"
    },
    {
        "name": "用plantuml画图示例",
        "date": "2020年9月6日",
        "abstract": "依赖图： 代码： @startuml skinparam defaultFontName 微软雅黑 skinparam defaultFontSize 15 skinparam monochrome true skinparam shadowing false frame 二进制转十进制 { (二转"
    },
    {
        "name": "QQ缩略图和大图不同实现",
        "date": "2020年8月17日",
        "abstract": "背景 最近在QQ群里看见别人发一张图，缩略图看着是一个样子，但打开大图以后却发现是另一张图，仔细观察这两张图发现缩略图是白色背景，大图是黑色背景，结合缩略图所在的对话框是白色的，打开大图的UI是黑色的，很容易猜到应该是依靠透明度实现的功能，因此研究了一下怎么用代码通过将两张图片混合来构造出满足要求的"
    },
    {
        "name": "Python制作字符图片",
        "date": "2020年8月17日",
        "abstract": "背景 字符图片，即纯使用字符构造出一幅图片。关于这个，网上的教程和程序已经非常多了，都是使用不同复杂程度的字符模拟图片的灰度（比如字符&#39;@&#39;就比字符&#39;,&#39;复杂，但是我要做的是像这样的：（原图是星之卡比） (() /((/ -()/ (()-- --(//- --\/-- -/()-- -)//--"
    },
    {
        "name": "Unity3D+Post Processing Stack V2自定义后处理效果研究",
        "date": "2020年7月14日",
        "abstract": "背景 众所周知，Unity3D支持自定义后处理效果，实现过程有三步： 添加着色器，在着色器里书写后处理代码； 添加材质，把材质和着色器绑定； 给相机添加脚本，重写其OnRenderImage方法，将材质传入Graphics.Blit方法中。 但是在做最近的一个项目时，我使用了Unity3D的官方后处"
    },
    {
        "name": "WindowsTerminal折腾记",
        "date": "2020年6月9日",
        "abstract": "背景 Windows Terminal最近出了1.0版本，界面非常美观，但要配置好还是要下一番功夫，而且网上的教程都是互相抄，所以特将我的配置过程记录如下。 字体 首先是字体，默认字体英文不错，但中文挺不好看的，而Windows Terminal不支持单字节字符和双字节字符配置不同的字体，所以我找到"
    },
    {
        "name": "关于PowerShell调用Linq的一组实验",
        "date": "2020年4月30日",
        "abstract": "调用Linq返回的那个类型我不太清楚，但应该是一个实现了IEnumerable的类，不能直接当作数组使用，但可以用For-Object(%)进行迭代。因此可见，当Zip"
    },
    {
        "name": "PowerShell创建参考窗口",
        "date": "2020年4月30日",
        "abstract": "平常我们经常遇到这样一个问题，在使用一个窗口工作时常常需要参考其他窗口的文字或图片，此时就需要频繁切换窗口；或者是看视频时需要参考前面进度"
    },
    {
        "name": "Sympy常用函数总结",
        "date": "2020年4月6日",
        "abstract": "基础 数学格式输出： 添加变量： 声明分数： 化简式子： 因式分解： 提取公因式： 约分： 裂项： 变换形式： 数列求和： 数列求积： 微积分 求导："
    },
    {
        "name": "Python切图脚本",
        "date": "2020年3月2日",
        "abstract": "时值疫情，作业需要在网上提交。最近老师改变了交作业方式，现在需要将完整的作业图片切分成一题一题的提交，故本人写了个python脚本实现自动切分。"
    },
    {
        "name": "用Graphviz画简单依赖图示例",
        "date": "2020年2月23日",
        "abstract": "代码 编译 效果"
    },
    {
        "name": "gvim使用总结",
        "date": "2020年2月14日",
        "abstract": "我的gvim配置 一些总结"
    },
    {
        "name": "用Python演奏音乐",
        "date": "2020年1月29日",
        "abstract": "笔者什么乐器也不会，乐理知识也只有中小学音乐课学的一点点。不过借助Python，调用编曲家常用的MIDI程序库，也能弹奏出一些简单的音乐，以下是笔者的一些心得。"
    },
    {
        "name": "关于Haskell计算斐波那契数列的思考",
        "date": "2020年1月24日",
        "abstract": "众所周知，Haskell语言是一门函数式编程语言。函数式编程语言的一大特点就是数值和对象都是不可变的，而这与经常需要对状态目前的值进行修改的动态规划算法似乎有些“格格不入”，本文对几乎可以说是动态规划的最简单特例：斐波那契数列的求解提出几种算法（不包括矩阵快速幂优化、Monad和通项公式计算），探讨"
    },
    {
        "name": "用matplotlib绘制图片示例（新）",
        "date": "2019年12月7日",
        "abstract": "获得矢量图可以用jupyter导出为markdown格式然后下载导出的压缩包，里面的svg格式文件就是矢量图，可以直接拖进Word。 In [1]: import numpy as np from scipy import stats import matplotlib.pyplot as plt"
    },
    {
        "name": "《串并行数据结构与算法（SML语言）实验》题解",
        "date": "2019年11月11日",
        "abstract": "注意：本题解仅供参考学习，请勿直接抄袭代码，否则造成的后果和笔者无关。 第一题： 题意： 对n个数升序排序。 题解： 快排，不解释。 代码（省略了输入输出函数，下同）： 第二题： 题意： 单源最短路，点数1000以内，边数3000以内。 题解： 实在想不出SML语言怎么写邻接表，考虑到点数只有100"
    },
    {
        "name": "educoder SML程序设计题线下编译环境搭建",
        "date": "2019年9月22日",
        "abstract": "背景 最近《串并行数据结构与算法设计》的老师在educoder上布置了一些SML程序设计题，虽然网站上有在线编译功能，但还是在线下编译调试方便，特记录编译环境过程如下（我用的GVIM，但Notepad++、Visual Studio Code等编辑器可以类推） 第一步：安装编译器 下载Standar"
    },
    {
        "name": "使用OpenCV对图片进行特征点检测和匹配（C++）",
        "date": "2019年8月10日",
        "abstract": "背景 最近从不同网站下载了非常多的动漫壁纸，其中有一些内容相同，但是大小、背景颜色、色调、主人公的位置不同（例子如下）。正因为如此，基础的均方误差、直方图检测等方法很难识别出这些相似的图片。 思路 OpenCV中有很多用来对特征点进行检测和计算的函数，这些函数能够利用像素点及其周围的灰度检测其是否是"
    },
    {
        "name": "用matplotlib画简单折线图示例",
        "date": "2019年3月5日",
        "abstract": "例1 例2 "
    },
    {
        "name": "使用QtCreator遇到的一些问题",
        "date": "2019年2月6日",
        "abstract": "0. 背景 最近在学习QtCreator（版本：4.8.1；编译器：MSVC 2017 64 bit），遇到了一些问题，特记录如下。（ 1. 引用库 QtCreator可以直接包含Windows.h，但是没有默认引用User32.lib，所以需要在设置里面引用，步骤如下： 右键点击左边栏的项目名称，"
    },
    {
        "name": "PdfSharp库剪裁Pdf页面边缘空白部分",
        "date": "2019年1月30日",
        "abstract": "背景 网上下载下来的Pdf格式电子书放到Kindle后由于页面太大，缩放后字常常小得看不清，因此可以通过剪裁页面边缘的空白以缩小页面，使Kindle上显示的字放大。在GitHub上星最多的C Pdf处理库就是PdfSharp了，然而这个库没有Api手册，需要从零散的示例中找到需要的函数，因此将代码记"
    },
    {
        "name": "用PyInstaller打包用PyQt5编写的python程序",
        "date": "2018年12月31日",
        "abstract": "0.背景 本弱初学PyQt5，写了一个GUI小程序，但在用PyInstaller打包时出现了不少问题，现将几个比较大的问题记录如下，希望以后能记住。 1. 资源打包 首先是资源打包的问题，我写的程序引用了一张图片，那么在没经过特殊处理的情况下如果想让程序正常运行，就必须把图片放在和程序同一个目录下，"
    },
    {
        "name": "git基本操作",
        "date": "2018年9月21日",
        "abstract": "在当前文件夹创建git目录 添加当前文件夹的文件或确认文件修改（未保存） 添加该文件夹所有文件 删除当前文件夹的文件（未保存） 保存并说明 查看之前的更改 添加密钥 然后将.ssh文件夹里的id_rsa.pub文件内容复制粘贴到GitHub的设置里面 设置本地用户名和邮箱 添加远程服务器 查看远程服"
    },
    {
        "name": "ffmpeg常见用法总结",
        "date": "2018年8月28日",
        "abstract": "1. 视频/音频剪切： 去掉 ss指令表示从头开始 去掉 t指令表示剪切到结尾 2. wav转MP3： 3. 视频/音频连接： 创建input.txt 然后输入命令 4.分离视频中的音频和视频 分离视频 分离音频 注意视频中包含的音频常常是aac格式，故如果output_file的后缀名是mp3会报"
    }
]
